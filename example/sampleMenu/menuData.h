#ifndef menuData_h
#define menuData_h

/*
 * file : menuData.h
 * Copyright (c) pfeuh <ze.pfeuh@gmail.com>
 * creation date : 2019/10/21 12:47:19
 * All rights reserved.
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/********************************************/
/*                 WARNING!                 */
/*    This file is generated by yaamm.py,   */
/*  if you edit it, it will be overwritten  */
/*        by the next generation!           */
/********************************************/

// Table of %s root's title     00021
// Table of parent              00043
// Table of child               00043
// Table of next                00043
// Table of previous            00043
// Table of labels              00571
// Table of pointers to labels  00086
// Table of function callbacks  00086
// Table of edit callbacks      00086
// Table of types               00043
// ----------------------------------
// TOTAL                        01065

#include <Arduino.h>
#include <menuBrowser.h>

#define MENU_BROWSER_NB_ENTRIES 43
#define MENU_BROWSER_NB_VARIABLES 19
#define MENU_BROWSER_NB_FUNCTIONS 20

const char MENU_BROWSER_ROOT_LABEL[21] PROGMEM = "TEST MENU UNIT TESTS";

// functions
extern byte dumpAll();
extern byte loadAll();
extern byte saveAll();
extern byte dumpGlobal();
extern byte loadGlobal();
extern byte saveGlobal();
extern byte initSeq();
extern byte swapSeq();
extern byte copySeq();
extern byte loadFactory();
extern byte dumpSeq();
extern byte loadSeq();
extern byte saveSeq();
extern byte factorySettings();
extern byte testStepLeds();
extern byte testIndLeds();
extern byte displayVersions();
extern byte test1();
extern byte test2();
extern byte test3();

// edit/display variables' functions
extern void editChannelIn(byte direction);
extern void editChannelOut(byte direction);
extern void editTempo(byte direction);
extern void editProgramNumber(byte direction);
extern void editArpeggiator(byte direction);
extern void editClockIn(byte direction);
extern void editClockOut(byte direction);
extern void editKeyClick(byte direction);
extern void editAudioBeat(byte direction);
extern void editSysEx(byte direction);
extern void editTransposition(byte direction);
extern void editGroove(byte direction);
extern void editGateMode(byte direction);
extern void editLastStep(byte direction);
extern void editCcNum(byte direction);
extern void editLivingValue1(byte direction);
extern void editLivingValue2(byte direction);
extern void editAppVersion(byte direction);
extern void editCompilationTimestamp(byte direction);

const byte MENU_DATA_parentTable[MENU_BROWSER_NB_ENTRIES] PROGMEM = 
{
   /* 000 */ MENU_BROWSER_NO_ENTRY,
   /* 001 */   0,
   /* 002 */   0,
   /* 003 */   0,
   /* 004 */   0,
   /* 005 */   0,
   /* 006 */   0,
   /* 007 */   0,
   /* 008 */   0,
   /* 009 */   0,
   /* 010 */   0,
   /* 011 */   0,
   /* 012 */   0,
   /* 013 */   0,
   /* 014 */   0,
   /* 015 */   0,
   /* 016 */   0,
   /* 017 */   0,
   /* 018 */ MENU_BROWSER_NO_ENTRY,
   /* 019 */  18,
   /* 020 */  18,
   /* 021 */  18,
   /* 022 */  18,
   /* 023 */  18,
   /* 024 */  18,
   /* 025 */  18,
   /* 026 */  18,
   /* 027 */  18,
   /* 028 */  18,
   /* 029 */  18,
   /* 030 */ MENU_BROWSER_NO_ENTRY,
   /* 031 */  30,
   /* 032 */  30,
   /* 033 */  30,
   /* 034 */  30,
   /* 035 */  30,
   /* 036 */  30,
   /* 037 */  30,
   /* 038 */  37,
   /* 039 */  37,
   /* 040 */  37,
   /* 041 */  37,
   /* 042 */  37,
};

const byte MENU_DATA_childTable[MENU_BROWSER_NB_ENTRIES] PROGMEM = 
{
   /* 000 */   1,
   /* 001 */ MENU_BROWSER_NO_ENTRY,
   /* 002 */ MENU_BROWSER_NO_ENTRY,
   /* 003 */ MENU_BROWSER_NO_ENTRY,
   /* 004 */ MENU_BROWSER_NO_ENTRY,
   /* 005 */ MENU_BROWSER_NO_ENTRY,
   /* 006 */ MENU_BROWSER_NO_ENTRY,
   /* 007 */ MENU_BROWSER_NO_ENTRY,
   /* 008 */ MENU_BROWSER_NO_ENTRY,
   /* 009 */ MENU_BROWSER_NO_ENTRY,
   /* 010 */ MENU_BROWSER_NO_ENTRY,
   /* 011 */ MENU_BROWSER_NO_ENTRY,
   /* 012 */ MENU_BROWSER_NO_ENTRY,
   /* 013 */ MENU_BROWSER_NO_ENTRY,
   /* 014 */ MENU_BROWSER_NO_ENTRY,
   /* 015 */ MENU_BROWSER_NO_ENTRY,
   /* 016 */ MENU_BROWSER_NO_ENTRY,
   /* 017 */ MENU_BROWSER_NO_ENTRY,
   /* 018 */  19,
   /* 019 */ MENU_BROWSER_NO_ENTRY,
   /* 020 */ MENU_BROWSER_NO_ENTRY,
   /* 021 */ MENU_BROWSER_NO_ENTRY,
   /* 022 */ MENU_BROWSER_NO_ENTRY,
   /* 023 */ MENU_BROWSER_NO_ENTRY,
   /* 024 */ MENU_BROWSER_NO_ENTRY,
   /* 025 */ MENU_BROWSER_NO_ENTRY,
   /* 026 */ MENU_BROWSER_NO_ENTRY,
   /* 027 */ MENU_BROWSER_NO_ENTRY,
   /* 028 */ MENU_BROWSER_NO_ENTRY,
   /* 029 */ MENU_BROWSER_NO_ENTRY,
   /* 030 */  31,
   /* 031 */ MENU_BROWSER_NO_ENTRY,
   /* 032 */ MENU_BROWSER_NO_ENTRY,
   /* 033 */ MENU_BROWSER_NO_ENTRY,
   /* 034 */ MENU_BROWSER_NO_ENTRY,
   /* 035 */ MENU_BROWSER_NO_ENTRY,
   /* 036 */ MENU_BROWSER_NO_ENTRY,
   /* 037 */  38,
   /* 038 */ MENU_BROWSER_NO_ENTRY,
   /* 039 */ MENU_BROWSER_NO_ENTRY,
   /* 040 */ MENU_BROWSER_NO_ENTRY,
   /* 041 */ MENU_BROWSER_NO_ENTRY,
   /* 042 */ MENU_BROWSER_NO_ENTRY,
};

const byte MENU_DATA_nextTable[MENU_BROWSER_NB_ENTRIES] PROGMEM = 
{
   /* 000 */  18,
   /* 001 */   2,
   /* 002 */   3,
   /* 003 */   4,
   /* 004 */   5,
   /* 005 */   6,
   /* 006 */   7,
   /* 007 */   8,
   /* 008 */   9,
   /* 009 */  10,
   /* 010 */  11,
   /* 011 */  12,
   /* 012 */  13,
   /* 013 */  14,
   /* 014 */  15,
   /* 015 */  16,
   /* 016 */  17,
   /* 017 */ MENU_BROWSER_NO_ENTRY,
   /* 018 */  30,
   /* 019 */  20,
   /* 020 */  21,
   /* 021 */  22,
   /* 022 */  23,
   /* 023 */  24,
   /* 024 */  25,
   /* 025 */  26,
   /* 026 */  27,
   /* 027 */  28,
   /* 028 */  29,
   /* 029 */ MENU_BROWSER_NO_ENTRY,
   /* 030 */ MENU_BROWSER_NO_ENTRY,
   /* 031 */  32,
   /* 032 */  33,
   /* 033 */  34,
   /* 034 */  35,
   /* 035 */  36,
   /* 036 */  37,
   /* 037 */ MENU_BROWSER_NO_ENTRY,
   /* 038 */  39,
   /* 039 */  40,
   /* 040 */  41,
   /* 041 */  42,
   /* 042 */ MENU_BROWSER_NO_ENTRY,
};

const byte MENU_DATA_previousTable[MENU_BROWSER_NB_ENTRIES] PROGMEM = 
{
   /* 000 */ MENU_BROWSER_NO_ENTRY,
   /* 001 */ MENU_BROWSER_NO_ENTRY,
   /* 002 */   1,
   /* 003 */   2,
   /* 004 */   3,
   /* 005 */   4,
   /* 006 */   5,
   /* 007 */   6,
   /* 008 */   7,
   /* 009 */   8,
   /* 010 */   9,
   /* 011 */  10,
   /* 012 */  11,
   /* 013 */  12,
   /* 014 */  13,
   /* 015 */  14,
   /* 016 */  15,
   /* 017 */  16,
   /* 018 */   0,
   /* 019 */ MENU_BROWSER_NO_ENTRY,
   /* 020 */  19,
   /* 021 */  20,
   /* 022 */  21,
   /* 023 */  22,
   /* 024 */  23,
   /* 025 */  24,
   /* 026 */  25,
   /* 027 */  26,
   /* 028 */  27,
   /* 029 */  28,
   /* 030 */  18,
   /* 031 */ MENU_BROWSER_NO_ENTRY,
   /* 032 */  31,
   /* 033 */  32,
   /* 034 */  33,
   /* 035 */  34,
   /* 036 */  35,
   /* 037 */  36,
   /* 038 */ MENU_BROWSER_NO_ENTRY,
   /* 039 */  38,
   /* 040 */  39,
   /* 041 */  40,
   /* 042 */  41,
};

/*   0 */ const char labelGlobalEdit[] PROGMEM = "GLOBAL CONFIG.";
/*   1 */ const char labelChannelIn[] PROGMEM = "Input channel";
/*   2 */ const char labelChannelOut[] PROGMEM = "Output channel";
/*   3 */ const char labelTempo[] PROGMEM = "Tempo";
/*   4 */ const char labelProgramNumber[] PROGMEM = "Program number";
/*   5 */ const char labelArpeggiator[] PROGMEM = "Arpeggiator";
/*   6 */ const char labelClockIn[] PROGMEM = "Midi clock in";
/*   7 */ const char labelClockOut[] PROGMEM = "Midi clock out";
/*   8 */ const char labelKeyClick[] PROGMEM = "Keyboard echo";
/*   9 */ const char labelAudioBeat[] PROGMEM = "Metronome";
/*  10 */ const char labelSysEx[] PROGMEM = "accept sysEx";
/*  11 */ const char labelTransposition[] PROGMEM = "Transposition";
/*  12 */ const char labelDumpAll[] PROGMEM = "Dump all";
/*  13 */ const char labelLoadAll[] PROGMEM = "Load all";
/*  14 */ const char labelSaveAll[] PROGMEM = "Save all";
/*  15 */ const char labelDumpGlobal[] PROGMEM = "Dump global par.";
/*  16 */ const char labelLoadGlobal[] PROGMEM = "Load global par.";
/*  17 */ const char labelSaveGlobal[] PROGMEM = "Save global par.";
/*  18 */ const char labelSequenceEdit[] PROGMEM = "SEQUENCE CONFIG.";
/*  19 */ const char labelGroove[] PROGMEM = "Groove";
/*  20 */ const char labelGateMode[] PROGMEM = "Gate duration";
/*  21 */ const char labelLastStep[] PROGMEM = "Last step";
/*  22 */ const char labelCcNum[] PROGMEM = "Ctrl chg number";
/*  23 */ const char labelInitSeq[] PROGMEM = "initialize seq.";
/*  24 */ const char labelSwapSeq[] PROGMEM = "Swap sequences";
/*  25 */ const char labelCopySeq[] PROGMEM = "copy sequence";
/*  26 */ const char labelLoadFactory[] PROGMEM = "Load factory seq";
/*  27 */ const char labelDumpSeq[] PROGMEM = "Dump sequence";
/*  28 */ const char labelLoadSeq[] PROGMEM = "Load sequence";
/*  29 */ const char labelSaveSeq[] PROGMEM = "Save sequence";
/*  30 */ const char labelMaintenance[] PROGMEM = "MAINTENANCE";
/*  31 */ const char labelLivingValue1[] PROGMEM = "Positive Value";
/*  32 */ const char labelLivingValue2[] PROGMEM = "Negative Value";
/*  33 */ const char labelFactorySettings[] PROGMEM = "Factory settings";
/*  34 */ const char labelTestStepLeds[] PROGMEM = "Test step leds";
/*  35 */ const char labelTestIndLeds[] PROGMEM = "Test ind. leds";
/*  36 */ const char labelDisplayVersions[] PROGMEM = "Versions";
/*  37 */ const char labelSubmenu[] PROGMEM = "TESTS";
/*  38 */ const char labelTest1[] PROGMEM = "Function 1";
/*  39 */ const char labelTest2[] PROGMEM = "Function 2";
/*  40 */ const char labelTest3[] PROGMEM = "Function 3";
/*  41 */ const char labelAppVersion[] PROGMEM = "Version number";
/*  42 */ const char labelCompilationTimestamp[] PROGMEM = "Comp. timestamp";

const char *const MENU_DATA_labelsTable[MENU_BROWSER_NB_ENTRIES] PROGMEM =
{
    /*   0 */ labelGlobalEdit,
    /*   1 */ labelChannelIn,
    /*   2 */ labelChannelOut,
    /*   3 */ labelTempo,
    /*   4 */ labelProgramNumber,
    /*   5 */ labelArpeggiator,
    /*   6 */ labelClockIn,
    /*   7 */ labelClockOut,
    /*   8 */ labelKeyClick,
    /*   9 */ labelAudioBeat,
    /*  10 */ labelSysEx,
    /*  11 */ labelTransposition,
    /*  12 */ labelDumpAll,
    /*  13 */ labelLoadAll,
    /*  14 */ labelSaveAll,
    /*  15 */ labelDumpGlobal,
    /*  16 */ labelLoadGlobal,
    /*  17 */ labelSaveGlobal,
    /*  18 */ labelSequenceEdit,
    /*  19 */ labelGroove,
    /*  20 */ labelGateMode,
    /*  21 */ labelLastStep,
    /*  22 */ labelCcNum,
    /*  23 */ labelInitSeq,
    /*  24 */ labelSwapSeq,
    /*  25 */ labelCopySeq,
    /*  26 */ labelLoadFactory,
    /*  27 */ labelDumpSeq,
    /*  28 */ labelLoadSeq,
    /*  29 */ labelSaveSeq,
    /*  30 */ labelMaintenance,
    /*  31 */ labelLivingValue1,
    /*  32 */ labelLivingValue2,
    /*  33 */ labelFactorySettings,
    /*  34 */ labelTestStepLeds,
    /*  35 */ labelTestIndLeds,
    /*  36 */ labelDisplayVersions,
    /*  37 */ labelSubmenu,
    /*  38 */ labelTest1,
    /*  39 */ labelTest2,
    /*  40 */ labelTest3,
    /*  41 */ labelAppVersion,
    /*  42 */ labelCompilationTimestamp,
};

const PROGMEM MENU_BROWSER_FUNCTION_PTR MENU_DATA_execFunctionsTable[20] = 
{
    /*  12   0 */ &dumpAll,
    /*  13   1 */ &loadAll,
    /*  14   2 */ &saveAll,
    /*  15   3 */ &dumpGlobal,
    /*  16   4 */ &loadGlobal,
    /*  17   5 */ &saveGlobal,
    /*  23   6 */ &initSeq,
    /*  24   7 */ &swapSeq,
    /*  25   8 */ &copySeq,
    /*  26   9 */ &loadFactory,
    /*  27  10 */ &dumpSeq,
    /*  28  11 */ &loadSeq,
    /*  29  12 */ &saveSeq,
    /*  33  13 */ &factorySettings,
    /*  34  14 */ &testStepLeds,
    /*  35  15 */ &testIndLeds,
    /*  36  16 */ &displayVersions,
    /*  38  17 */ &test1,
    /*  39  18 */ &test2,
    /*  40  19 */ &test3,
};

const PROGMEM MENU_BROWSER_EDIT_PTR MENU_DATA_editFunctionsTable[19] = 
{
    /*   1   0 */ &editChannelIn,
    /*   2   1 */ &editChannelOut,
    /*   3   2 */ &editTempo,
    /*   4   3 */ &editProgramNumber,
    /*   5   4 */ &editArpeggiator,
    /*   6   5 */ &editClockIn,
    /*   7   6 */ &editClockOut,
    /*   8   7 */ &editKeyClick,
    /*   9   8 */ &editAudioBeat,
    /*  10   9 */ &editSysEx,
    /*  11  10 */ &editTransposition,
    /*  19  11 */ &editGroove,
    /*  20  12 */ &editGateMode,
    /*  21  13 */ &editLastStep,
    /*  22  14 */ &editCcNum,
    /*  31  15 */ &editLivingValue1,
    /*  32  16 */ &editLivingValue2,
    /*  41  17 */ &editAppVersion,
    /*  42  18 */ &editCompilationTimestamp,
};

const byte MENU_DATA_itemTypeTable[43] PROGMEM = 
{
   /* 000 */ menuTypeMenu,
   /* 001 */ menuTypeVariable,
   /* 002 */ menuTypeVariable,
   /* 003 */ menuTypeVariable,
   /* 004 */ menuTypeVariable,
   /* 005 */ menuTypeVariable,
   /* 006 */ menuTypeVariable,
   /* 007 */ menuTypeVariable,
   /* 008 */ menuTypeVariable,
   /* 009 */ menuTypeVariable,
   /* 010 */ menuTypeVariable,
   /* 011 */ menuTypeVariable,
   /* 012 */ menuTypeFunction,
   /* 013 */ menuTypeFunction,
   /* 014 */ menuTypeFunction,
   /* 015 */ menuTypeFunction,
   /* 016 */ menuTypeFunction,
   /* 017 */ menuTypeFunction,
   /* 018 */ menuTypeMenu,
   /* 019 */ menuTypeVariable,
   /* 020 */ menuTypeVariable,
   /* 021 */ menuTypeVariable,
   /* 022 */ menuTypeVariable,
   /* 023 */ menuTypeFunction,
   /* 024 */ menuTypeFunction,
   /* 025 */ menuTypeFunction,
   /* 026 */ menuTypeFunction,
   /* 027 */ menuTypeFunction,
   /* 028 */ menuTypeFunction,
   /* 029 */ menuTypeFunction,
   /* 030 */ menuTypeMenu,
   /* 031 */ menuTypeVariable | MENU_BROWSER_LIVING_MASK,
   /* 032 */ menuTypeVariable | MENU_BROWSER_LIVING_MASK,
   /* 033 */ menuTypeFunction,
   /* 034 */ menuTypeFunction,
   /* 035 */ menuTypeFunction,
   /* 036 */ menuTypeFunction,
   /* 037 */ menuTypeMenu,
   /* 038 */ menuTypeFunction,
   /* 039 */ menuTypeFunction,
   /* 040 */ menuTypeFunction,
   /* 041 */ menuTypeVariable | MENU_BROWSER_RO_MASK,
   /* 042 */ menuTypeVariable | MENU_BROWSER_RO_MASK,
};

const word _MENU_DATA_tables[] =
{
    (word)MENU_BROWSER_ROOT_LABEL,
    (word)MENU_DATA_parentTable,
    (word)MENU_DATA_childTable,
    (word)MENU_DATA_nextTable,
    (word)MENU_DATA_previousTable,
    (word)MENU_DATA_labelsTable,
    (word)MENU_DATA_execFunctionsTable,
    (word)MENU_DATA_editFunctionsTable,
    (word)MENU_DATA_itemTypeTable,
};

word* MENU_DATA_tables = (word*)&_MENU_DATA_tables;

#endif

